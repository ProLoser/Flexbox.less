// display: inline-flex //
.inline-flexbox() {
  // 2009 spec
  display: -webkit-box;
  display: -moz-box;
  display: -ms-box;
  display: -o-box;
  display: box;
  // tweener -ms- spec
  display: -ms-inline-flexbox;
  // 2013 spec
  display: -webkit-inline-flex;
  display: -moz-inline-flex;
  display: -ms-inline-flex;
  display: -o-inline-flex;
  display: -inline-flex;
}
// display: flex //
.flexbox() {
  // 2009 spec
  display: -webkit-box;
  display: -moz-box;
  display: -ms-box;
  display: -o-box;
  display: box;
  // // tweener -ms- spec
  // display: -webkit-flexbox;
  // display: -moz-flexbox;
  display: -ms-flexbox;
  // display: -o-flexbox;
  // display: flexbox;
  // 2013 spec
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flex;
  display: -o-flex;
  display: flex;
}

// flex //
.flex(@flex) {
// 2009 spec
  -webkit-box-flex: @flex;
  -moz-box-flex: @flex;
  -ms-box-flex: @flex;
  -o-box-flex: @flex;
  box-flex: @flex;
// 2013 spec
  -webkit-flex: @flex;
  -moz-flex: @flex;
  -ms-flex: @flex;
  -o-flex: @flex;
  flex: @flex;
}

// flex-direction //
// 2009 spec
.flex-direction(@direction) when (@direction = row) {
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  -ms-box-orient: horizontal;
  -o-box-orient: horizontal;
  box-orient: horizontal;
}
// 2009 spec
.flex-direction(@direction) when (@direction = row-reverse) {
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  -ms-box-orient: horizontal;
  -o-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-direction: reverse;
  -moz-box-direction: reverse;
  -ms-box-direction: reverse;
  -o-box-direction: reverse;
  box-direction: reverse;
}
// 2009 spec
.flex-direction(@direction) when (@direction = column) {
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  -ms-box-orient: vertical;
  -o-box-orient: vertical;
  box-orient: vertical;
}
// 2009 spec
.flex-direction(@direction) when (@direction = column-reverse) {
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  -ms-box-orient: vertical;
  -o-box-orient: vertical;
  box-orient: vertical;
  -webkit-box-direction: reverse;
  -moz-box-direction: reverse;
  -ms-box-direction: reverse;
  -o-box-direction: reverse;
  box-direction: reverse;
}
// 2013 spec
.flex-direction(@direction) {
  -webkit-flex-direction: @direction;
  -moz-flex-direction: @direction;
  -ms-flex-direction: @direction;
  -o-flex-direction: @direction;
  flex-direction: @direction;
}

// order //
.order(@order) {
// 2009 spec
  -webkit-box-ordinal-group: @order + 1;
  -moz-box-ordinal-group: @order + 1;
  -ms-box-ordinal-group: @order + 1;
  -o-box-ordinal-group: @order + 1;
  box-ordinal-group: @order + 1;
// 2013 spec
  -webkit-order: @order;
  -moz-order: @order;
  -ms-order: @order;
  -o-order: @order;
  order: @order;
}

// flex-wrap //

// 2009 property is box-lines
// single == nowrap
// multiple == wrap
// no equivalent to wrap-reverse
// initial = single

// 2009 spec
.flex-wrap(@wrap-method) when (@wrap-method = wrap) {
  -webkit-lines: multiple;
  -webkit-box-lines: multiple;
  -moz-box-lines: multiple;
  -ms-box-lines: multiple;
  -o-box-lines: multiple;
  box-lines: multiple;
}

//box lines doesn't have wrap reverse, so use box-direction
// 2009 spec
.flex-wrap(@wrap-method) when (@wrap-method = wrap-reverse) {
  -webkit-lines: multiple;
  -webkit-box-lines: multiple;
  -moz-box-lines: multiple;
  -ms-box-lines: multiple;
  -o-box-lines: multiple;
  box-lines: multiple;
  -webkit-box-direction: reverse;
  -moz-box-direction: reverse;
  -ms-box-direction: reverse;
  -o-box-direction: reverse;
  box-direction: reverse;
}

// 2009 spec
.flex-wrap(@wrap-method) when (@wrap-method = nowrap) {
  -webkit-lines: single;
  -webkit-box-lines: single;
  -moz-box-lines: single;
  -ms-box-lines: single;
  -o-box-lines: single;
  box-lines: single;
}

// 2013 spec is flex-wrap instead of box-lines
// nowrap = single line LTR
// wrap = multiple lines LTR
// wrap-reverse = multiple lines, reversed children LTR
// initial = nowrap
// not inherited by default; spec inherit to force it

// 2013 spec
.flex-wrap(@wrap-method) {
  -webkit-flex-wrap: @wrap-method;
  -moz-flex-wrap: @wrap-method;
  -ms-flex-wrap: @wrap-method;
  -o-flex-wrap: @wrap-method;
  flex-wrap: @wrap-method;
}

// align-items //

// 2009 property is box-align
// start == flex-start
// end == flex-end
// center == center
// baseline == baseline
// stretch = stretch

.align-items(@align-method) when (@align-method = start) {

// TODO need 2009 spec here

  -webkit-align-items: flex-start;
  -moz-align-items: flex-start;
  -ms-align-items: flex-start;
  -o-align-items: flex-start;
  align-items: flex-start;
}

.align-items(@align-method) when (@align-method = end) {

// TODO need 2009 spec here

  -webkit-align-items: flex-end;
  -moz-align-items: flex-end;
  -ms-align-items: flex-end;
  -o-align-items: flex-end;
  align-items: flex-end;
}

// for center, baseline, and stretch, which are the same in both specs
.align-items(@align-method) when 
                                  (@align-method = center), 
                                  (@align-method = baseline),
                                  (@align-method = stretch) {
  -webkit-box-align: @align-method;
  -moz-box-align: @align-method;
  -ms-flex-align: @align-method;
  -webkit-align-items: @align-method;
  -moz-align-items: @align-method;
  -ms-align-items: @align-method;
  -o-align-items: @align-method;
  align-items: @align-method;
}

// align-self //

// 2009 property is flex-item-align
// auto == auto
// start == flex-start
// end == flex-end
// center == center
// baseline == baseline
// stretch = stretch
// note: not sure about syntax/support of flex-item-align in 2009 syntax except -ms
// can't find any references to moz, webkit, or opera

.align-self(@align-method) when (@align-method = start) {
// 2009 spec
  -ms-flex-item-align: @align-method;
  flex-item-align: @align-method;
// 2013 spec
  -webkit-align-self: flex-start;
  -moz-align-self: flex-start;
  -ms-align-self: flex-start;
  -o-align-self: flex-start;
  align-self: flex-start;
}

.align-self(@align-method) when (@align-method = end) {
// 2009 spec
  -ms-flex-item-align: @align-method;
  flex-item-align: @align-method;
// 2013 spec
  -webkit-align-self: flex-end;
  -moz-align-self: flex-end;
  -ms-align-self: flex-end;
  -o-align-self: flex-end;
  align-self: flex-end;
}

// for auto, center, baseline, and stretch, which are the same in both specs
.align-self(@align-method) when 
                                (@align-method = auto), 
                                (@align-method = center), 
                                (@align-method = baseline), 
                                (@align-method = stretch) {
// 2009 spec
  -ms-flex-item-align: @align-method;
  flex-item-align: @align-method;
// 2013 spec
  -webkit-align-self: @align-method;
  -moz-align-self: @align-method;
  -ms-align-self: @align-method;
  -o-align-self: @align-method;
  align-self: @align-method;
}

// Align Content //
// align content deals with distributing flex items within a container, on the cross axis, where more than one 
// line of flex items

// microsoft property is flex-line-pack
// flex-end == end
// flex-start == start
// space-between == justify
// space-around == distribute
// center == center
// stretch == stretch

.align-content(@align-method) when (@align-method = start) {
// tweener -ms- spec
  -ms-flex-line-pack: @align-method;
// 2013 spec
  -webkit-align-content: flex-start;
  -moz-align-content: flex-start;
  -o-align-content: flex-start;
  align-content: flex-start;
}

.align-content(@align-method) when (@align-method = end) {
// tweener -ms- spec
  -ms-flex-line-pack: @align-method;
// 2013 spec
  -webkit-align-content: flex-end;
  -moz-align-content: flex-end;
  -o-align-content: flex-end;
  align-content: flex-end;
}

.align-content(@align-method) when (@align-method = space-between) {
// tweener -ms- spec
  -ms-flex-line-pack: justify;
// 2013 spec
  -webkit-align-content: space-between;
  -moz-align-content: space-between;
  -o-align-content: space-between;
  align-content: space-between;
}

.align-content(@align-method) when (@align-method = space-around) {
// tweener -ms- spec
  -ms-flex-line-pack: distribute;
// 2013 spec
  -webkit-align-content: space-around;
  -moz-align-content: space-around;
  -o-align-content: space-around;
  align-content: space-around;
}

.align-content(@align-method) when 
                                  (@align-method = center), 
                                  (@align-method = stretch) {
// tweener -ms- spec
  -ms-flex-line-pack: @align-method;
// 2013 spec
  -webkit-align-content: @align-method;
  -moz-align-content: @align-method;
  -o-align-content: @align-method;
  align-content: @align-method;
}

// Justify Content //
// Main Axis Alignment: specifying the alignment of flex items within a container on the primary axis

// 2009 spec == box-pack
// tweener MS spec == flex-pack
// current spec == justify-content

// flex-start == start
// center == center
// flex-end == end
// space-between == justify
// space-around == distribute
// 2009 spec does not support 'distribute' or 'space-around' property

.justify-content(@justify-method) when (@justify-method = start) {
  //2009
  -webkit-box-pack: @justify-method;
  -moz-box-pack: @justify-method;
  -ms-box-pack: @justify-method;
  -o-box-pack: @justify-method;
  box-pack: @justify-method;
//tweener -ms-
// TODO tweener
// current spec
  -webkit-justify-content: flex-start;
  -moz-justify-content: flex-start;
  -ms-justify-content: flex-start;
  -o-justify-content: flex-start;
  justify-content: flex-start;
}

.justify-content(@justify-method) when (@justify-method = end) {
// 2009 spec
  -webkit-box-pack: @justify-method;
  -moz-box-pack: @justify-method;
  -ms-box-pack: @justify-method;
  -o-box-pack: @justify-method;
  box-pack: @justify-method;
// tweener -ms- spec
// TODO tweener
// 2013 spec
  -webkit-justify-content: flex-end;
  -moz-justify-content: flex-end;
  -ms-justify-content: flex-end;
  -o-justify-content: flex-end;
  justify-content: flex-end;
}

.justify-content(@justify-method) when (@justify-method = center) {
// 2009 spec
  -webkit-box-pack: center;
  -moz-box-pack: center;
// tweener -ms- spec
  -ms-flex-pack: center;
// 2013 spec
  -webkit-justify-content: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -o-justify-content: center;
  justify-content: center;
}

.justify-content(@justify-method) when (@justify-method = space-between) {
// 2009 spec
  -webkit-box-pack: justify;
  -moz-box-pack: justify;
// tweener -ms- spec
  -ms-flex-pack: justify;
// 2013 spec
  -webkit-justify-content: space-between;
  -moz-justify-content: space-between;
  -ms-justify-content: space-between;
  -o-justify-content: space-between;
  justify-content: space-between;
}

.justify-content(@justify-method) when (@justify-method = space-around) {
// 2009 spec
  -webkit-box-pack: distribute;
  -moz-box-pack: distribute;
// tweener -ms- spec
  -ms-flex-pack: distribute;
// 2013 spec
  -webkit-justify-content: space-around;
  -moz-justify-content: space-around;
  -ms-justify-content: space-around;
  -o-justify-content: space-around;
  justify-content: space-around;
}